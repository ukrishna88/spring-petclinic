pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'ls -ltr'
                sh 'echo "Build the project and create a JAR file"'
                sh './mvnw package -DskipTests=true'
                sh 'echo "Build generated successfully and created a JAR file"'
                //sh 'java -jar target/*.jar'
            }
        }    
        /* stage('Build Docker Image') {
    	    agent any
                steps {
      	            sh 'docker build -t ukrishna88/spring-petclinic .'
                }
        }
        } */
    // stage('Test') {
    //   steps {
    //     sh 'ls -ltr'
    //     sh 'echo "Test the project"'
    //     sh './mvnw test'
    //   }
    //   post {
    //     always {
    //       junit '**/target/surefire-reports/TEST-*.xml'
    //     }
    //   }
    // } 
        stage('Build Docker Image') {
            environment {
                DOCKER_IMAGE = "ukrishna88/spring-petclinic"
                DOCKERFILE_LOCATION = "spring-petclinic/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    sh 'docker info'
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    }
                }
            } 
        stage('Push Docker Build to Hub') {
            steps {
                script {
                sh 'pwd'
                sh 'ls -ltr'
                //sh 'echo ${CU}'
                //def dockerImage = docker.image("${DOCKER_IMAGE}")
                  //  docker.withRegistry('https://index.docker.io/v2/', "docker-cred") {
                    withCredentials([string(credentialsId: 'docker', variable: 'docker-cred')]){
                        sh 'docker login -u ukrishna88 -p ${docker-cred}'
                        sh 'dockerImage.push ${DOCKER_IMAGE}'
                //sh 'docker build . -t ukrishna88/spring-petclinic'
                    }
                }
            }
    // stage('Update Deployment File') {
    //     environment {
    //         GIT_REPO_NAME = "spring-petclinic"
    //         GIT_USER_NAME = "ukrishna88"
    //     }
    //     steps {
    //         withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
    //             sh '''
    //                 git config user.email "ukrishna88@gmail.com"
    //                 git config user.name "Krishnakumar Ulaganathan"
    //                 BUILD_NUMBER=${BUILD_NUMBER}
    //                 sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-petclinic/deployment.yml
    //                 git add spring-petclinic/deployment.yml
    //                 git commit -m "Update deployment image to version ${BUILD_NUMBER}"
    //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
    //             '''
    //         }
    //     }
    // }
        }
    }
}